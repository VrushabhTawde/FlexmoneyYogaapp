{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  // const password_pattern = /^(?=.\\d)(?=.[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\n\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.age === \"\") {\n    error.age = \"Name should not be empty\";\n  } else if (values.age > 65) {\n    error.age = \"Age should be between 18-65\";\n  } else {\n    error.age = \"\";\n  }\n  if (values.batch_time === \"\") {\n    error.batch_time = \"Name should not be empty\";\n  } else {\n    error.batch_time = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email Didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  }\n  // else if(!password_pattern.test(values.password)) {       error.password = \"Password didn't match\"  } \n  else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","name","age","batch_time","email","test","password","_c","$RefreshReg$"],"sources":["C:/Users/Vrushabh/Downloads/2ReactProject/frontend/src/SignupValidation.js"],"sourcesContent":["function Validation(values) {\r\n\r\n    let error = {}\r\n\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    \r\n    // const password_pattern = /^(?=.\\d)(?=.[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    \r\n    if(values.name === \"\") {        error.name = \"Name should not be empty\"    }     else {        error.name = \"\"    }\r\n    if(values.age === \"\") \r\n    {        \r\n        error.age = \"Name should not be empty\"    \r\n    } \r\n    else if(values.age>65){\r\n\r\n        error.age = \"Age should be between 18-65\"\r\n    }\r\n        else {        error.age = \"\"    }\r\n    if(values.batch_time === \"\") {        error.batch_time = \"Name should not be empty\"    }     else {        error.batch_time = \"\"    }\r\n    if(values.email === \"\") {        error.email = \"Name should not be empty\"    }     else if(!email_pattern.test(values.email)) {        error.email = \"Email Didn't match\"    }else {        error.email = \"\"    }\r\n    if(values.password === \"\") {        error.password = \"Password should not be empty\"    }     \r\n    // else if(!password_pattern.test(values.password)) {       error.password = \"Password didn't match\"  } \r\n    else {        error.password = \"\"    }    return error;}\r\n\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EAExB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,MAAMC,aAAa,GAAG,4BAA4B;;EAElD;;EAGA,IAAGF,MAAM,CAACG,IAAI,KAAK,EAAE,EAAE;IAASF,KAAK,CAACE,IAAI,GAAG,0BAA0B;EAAI,CAAC,MAAU;IAASF,KAAK,CAACE,IAAI,GAAG,EAAE;EAAI;EAClH,IAAGH,MAAM,CAACI,GAAG,KAAK,EAAE,EACpB;IACIH,KAAK,CAACG,GAAG,GAAG,0BAA0B;EAC1C,CAAC,MACI,IAAGJ,MAAM,CAACI,GAAG,GAAC,EAAE,EAAC;IAElBH,KAAK,CAACG,GAAG,GAAG,6BAA6B;EAC7C,CAAC,MACQ;IAASH,KAAK,CAACG,GAAG,GAAG,EAAE;EAAI;EACpC,IAAGJ,MAAM,CAACK,UAAU,KAAK,EAAE,EAAE;IAASJ,KAAK,CAACI,UAAU,GAAG,0BAA0B;EAAI,CAAC,MAAU;IAASJ,KAAK,CAACI,UAAU,GAAG,EAAE;EAAI;EACpI,IAAGL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAE;IAASL,KAAK,CAACK,KAAK,GAAG,0BAA0B;EAAI,CAAC,MAAU,IAAG,CAACJ,aAAa,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAE;IAASL,KAAK,CAACK,KAAK,GAAG,oBAAoB;EAAI,CAAC,MAAK;IAASL,KAAK,CAACK,KAAK,GAAG,EAAE;EAAI;EAChN,IAAGN,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAE;IAASP,KAAK,CAACO,QAAQ,GAAG,8BAA8B;EAAI;EACvF;EAAA,KACK;IAASP,KAAK,CAACO,QAAQ,GAAG,EAAE;EAAI;EAAK,OAAOP,KAAK;AAAC;AAACQ,EAAA,GAvBnDV,UAAU;AAyBnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}